# Based on original workflow from [template-package](https://github.com/vrchat-community/template-package)
# Modified by DeltaField on 2025-06-19

name: Build Release

on: 
  workflow_call:

jobs:

  # Validate Repository Configuration
  config:
    runs-on: ubuntu-latest
    outputs:
      config_package: ${{ steps.config_package.outputs.configPackage }}
    steps:

    # Ensure that required repository variable has been created for the Package
    - name: Validate Package Config
      id: config_package
      run: |
        if [ "${{ vars.PACKAGE_NAME }}" != "" ]; then
          echo "configPackage=true" >> $GITHUB_OUTPUT;
        else
          echo "configPackage=false" >> $GITHUB_OUTPUT;
        fi

  # Build and release the Package
  # If the repository is not configured properly, this job will be skipped
  build:
    needs: config
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      packagePath: .
    if: needs.config.outputs.config_package == 'true'
    steps:

      # Checkout Local Repository
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac

      # Get the Package version based on the package.json file
      - name: Get VersionTTT
        id: version
        uses: zoexx/github-action-json-file-properties@b9f36ce6ee6fe2680cd3c32b2c62e22eade7e590
        with: 
            file_path: "${{ env.packagePath }}/package.json"
            prop_path: "version"

      - name: Get Id
        id: id
        uses: zoexx/github-action-json-file-properties@b9f36ce6ee6fe2680cd3c32b2c62e22eade7e590
        with:
          file_path: "${{ env.packagePath }}/package.json"
          prop_path: "name"

      - name: Clone & Replace
        run: |
          rsync raw/README.md README.md
          sed -i -e "s/\$name/${{ vars.PACKAGE_NAME }}/g" README.md
          sed -i -e "s/\$version/${{ steps.version.outputs.value }}/g" README.md

      - name: Check for changes
        run: git diff --quiet || echo "CHANGED=true" >> $GITHUB_ENV

      - name: Commit & Push
        if: env.CHANGED == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md
          git commit -m "Update README.md with version $version"
          git push

      - name: Recreate folder structure
        run: |
          mkdir -p Packages/${{steps.id.outputs.value}}
          echo *
          shopt -s extglob
          rsync -av \
          --exclude ".*" \
          --exclude="Packages" \
          --exclude="raw/" \
          --exclude="raw.meta" \
          ./ ./Packages/${{steps.id.outputs.value}}
          echo "packagePath=Packages/${{steps.id.outputs.value}}" >> $GITHUB_ENV

      # Configure the Environment Variables needed for releasing the Package
      - name: Set Environment Variables
        run: |
          echo "zipFile=${{ vars.PACKAGE_NAME }}-${{ steps.version.outputs.value }}".zip >> $GITHUB_ENV
          echo "unityPackage=${{ vars.PACKAGE_NAME }}-${{ steps.version.outputs.value }}.unitypackage" >> $GITHUB_ENV
          echo "version=${{ steps.version.outputs.value }}" >> $GITHUB_ENV

      # Zip the Package for release
      - name: Create Package Zip
        working-directory: "${{ env.packagePath }}"
        run: zip -r "${{ github.workspace }}/${{ env.zipFile }}" .
      
      # Build a list of .meta files for future use
      - name: Track Package Meta Files
        run: find "${{ env.packagePath }}/" -name \*.meta >> metaList
      
      # Make a UnityPackage version of the Package for release
      - name: Create UnityPackage
        uses: pCYSl5EDgo/create-unitypackage@v1.2.3
        with:
          package-path: ${{ env.unityPackage }}
          include-files: metaList

      - name: Check for Tag
        uses: mukunku/tag-exists-action@v1.6.0
        id: check-tag
        with:
          tag: '${{env.version}}'

      # Make a release tag of the version from the package.json file 
      - name: Create Tag
        if: steps.check-tag.outputs.exists == 'false'
        id: tag_version
        uses: rickstaa/action-create-tag@88dbf7ff6fe2405f8e8f6c6fdfd78829bc631f83
        with:
          tag: "${{ env.version }}"

      # Publish the Release to GitHub
      - name: Make Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          files: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}
            ${{ env.packagePath }}/package.json
          tag_name: ${{ env.version }}
